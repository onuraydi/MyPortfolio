version: "3.7"

services:
  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: myapp-mssql
    networks: [myapp-net]
    environment:
      SA_PASSWORD: "81A84y04o09e19."
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    volumes:
      - mssql-data:/var/opt/mssql

  backend:
    build:
      context: .
      dockerfile: Backend/MyPortfolio.WebApi/dockerfile
    container_name: myapp-backend
    networks: [myapp-net]
    depends_on:
      - mssql
    environment:
      ConnectionStrings__Default: "Server=mssql;Database=MyDb;User Id=sa;Password=81A84y04o09e19.;"
    ports:
      - "5000:5000"

  identity:
    build:
      context: .
      dockerfile: Identity/dockerfile
    container_name: myapp-identity
    networks: [myapp-net]
    depends_on:
      - mssql
    ports:
      - "5001:5001"

  ocelot:
    build:
      context: .
      dockerfile: ApiGateway/Portfolio.OcelotGateway/dockerfile
    container_name: myapp-ocelot
    networks: [myapp-net]
    depends_on:
      - backend
      - identity
    ports:
      - "5002:5002"
    volumes:
      - ./ApiGateway/Portfolio.OcelotGateway/ocelot.json:/app/ocelot.json

  frontend:
    build:
      context: .
      dockerfile: Frontend/Portfolio.WebUI/dockerfile
    container_name: myapp-frontend
    networks: [myapp-net]
    depends_on:
      - ocelot
    ports:
      - "5003:5003"

  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    container_name: myapp-nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites-available:/etc/nginx/sites-available
      - ./nginx/sites-enabled:/etc/nginx/sites-enabled
      - ./nginx/certs:/etc/nginx/certs
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
    networks:
      - myapp-net

volumes:
  mssql-data:

networks:
  myapp-net:
